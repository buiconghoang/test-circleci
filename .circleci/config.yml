# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    environment:
        TEST_RESULT_WORKSPACE: "/myworkspace_hello_world"
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - run:
          name: "echo env TEST_RESULT_WORKSPACE"
          command: echo $TEST_RESULT_WORKSPACE
     
      - run:
          name: Print Current Working Directory and list file
          command: pwd
      - run:
          name: list file
          command: ls
      - run: 
          name: "create my_workspace"
          command: mkdir -p $TEST_RESULT_WORKSPACE

      - run:
          name: Print Current Working Directory and list file
          command: pwd
      - run:
          name: list file
          command: ls
      - run: 
          name: "create child folder"
          command: |
            cd $TEST_RESULT_WORKSPACE
            ls
            mkdir -p child_folder
      - run:
          name: "create file" 
          command: echo "Hello, world!" > ${TEST_RESULT_WORKSPACE}/child_folder/echo-output.txt

      - run:
          name: Print Current Working Directory and list file
          command: pwd
      - run:
          name: list file
          command: ls

      - run:
          name: list file in my workspace
          command: |
              cd $TEST_RESULT_WORKSPACE
              ls
              echo "child folder files: \n"
              cd child_folder
              ls
            
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: $TEST_RESULT_WORKSPACE
          # Must be relative path from root
          paths:
            - child_folder/

  test-attach-workflow-job:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    steps:
      - checkout
      - attach_workspace:
          at: /my_workspace_inxxxx
      
      - run:   
          name: Print Current Working Directory and list file
          command: pwd
      - run:
          name: list file
          command: ls
      - run:
          name: List files in the workspace
          command: ls /my_workspace_inxxxx/child_folder/


  build-push-docker-image:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: "show docker info"
          command: |
            echo "branch name: " $CIRCLE_BRANCH ", hash: "$CIRCLE_SHA1
            echo $DOCKER_PWD
            echo $DOCKER_USER_NAME

      - run:
          name: "Build docker"
          command: docker build -t hbc08/bch:$CIRCLE_SHA1 .
      - run:
          name: "push docker"
          command: |
            echo "$DOCKER_PWD" | docker login -u "$DOCKER_USER_NAME" --password-stdin
            docker push hbc08/bch:$CIRCLE_SHA1




# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-attach-workflow:
    jobs:
      - say-hello
      - test-attach-workflow-job:
          requires:
            - say-hello
        

  # push-image-workflow:
  #   jobs:
  #     - build-push-docker-image
